package ToDo;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class TarefaDAO extends BasicoDAO{

	public void insert(Tarefa tarefa) {

		String sql = " insert into tarefa(descricao, check, data, usuario) values(?,?,?,?)";
		
		try (Connection conn = getConnection();
			 PreparedStatement statement = conn.prepareStatement(sql)){
			statement.setString(1, tarefa.getDescricao());
			statement.setInt(2, tarefa.getCheck());
			statement.setString(3, tarefa.getData());
			statement.setString(4, tarefa.getUsuario());
			statement.execute();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public void delete (Tarefa tarefa) {
		
		String sql = " delete from tarefa where cod_tarefa = ?";
	
		try(Connection conn = getConnection();
				PreparedStatement statement = conn.prepareStatement(sql)) {
				statement.setInt(1, tarefa.getCod_tarefa());
				statement.execute();
			}catch(Exception e) {
				e.printStackTrace();
			}
	}
	
	public void update (Tarefa tarefa) {
		String sql = " update tarefa set descricao = ?, check = ?, data = ?, usuario = ? where cod_usuario = ?";
	

		try (Connection conn = getConnection();
			 PreparedStatement statement = conn.prepareStatement(sql)){
			statement.setString(1, tarefa.getDescricao());
			statement.setInt(2, tarefa.getCheck());
			statement.setString(3, tarefa.getData());
			statement.setString(4, tarefa.getUsuario());
			statement.execute();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public Usuario getById (int id) {
		Usuario usuario = null;
		String sql = " select cod_tarefa, nome_tarefa, descricao, check, from usuario where cod_usuario = ?";
	

		try(Connection conn = getConnection();
			PreparedStatement statement = conn.prepareStatement(sql)) {
			statement.setInt(1, id);
			ResultSet resultSet = statement.executeQuery();
			if(resultSet.next()) {
				usuario = new Usuario();
				usuario.setCod_usuario(resultSet.getInt(1));
				usuario.setNome_usuario(resultSet.getString(2));
				usuario.setEmail(resultSet.getString(3));
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return usuario;
	}
	
	public List<Usuario> getAll(){
		List<Usuario> list = new ArrayList<>();
		String sql = " select cod_usuario, nome_usuario, email from usuario order by nome";
		
		try(Connection conn = getConnection();
			PreparedStatement statement = conn.prepareStatement(sql)) {
			ResultSet resultSet = statement.executeQuery();
			while(resultSet.next()) {
				Usuario usuario = new Usuario();				
				usuario.setCod_usuario(resultSet.getInt(1));
				usuario.setNome_usuario(resultSet.getString(2));
				usuario.setEmail(resultSet.getString(3));
				
				list.add(usuario);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return list;
	}
}
